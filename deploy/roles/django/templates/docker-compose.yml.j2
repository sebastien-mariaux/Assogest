services:
  db:
    image: postgres:17
    env_file: .env
    environment:
      - POSTGRES_DB={{ db_name }}
      - POSTGRES_USER={{ db_user }}
      - POSTGRES_PASSWORD={{ db_password }}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - assogest_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ db_user }}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    networks:
      - assogest_network

  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: gunicorn assogest.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120
    volumes:
      - .:/app
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
      - ./static:/app/static
    ports:
      - "127.0.0.1:8000:8000"
    environment:
      - POSTGRES_DB={{ db_name }}
      - POSTGRES_USER={{ db_user }}
      - POSTGRES_PASSWORD={{ db_password }}
      - DJANGO_SETTINGS_MODULE=assogest.settings.production
      - DJANGO_SECRET_KEY={{ django_secret_key }}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - assogest_network

  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A assogest worker -l info
    volumes:
      - .:/app
    env_file: .env
    depends_on:
      - db
      - redis
    networks:
      - assogest_network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  assogest_network:
    name: assogest_network